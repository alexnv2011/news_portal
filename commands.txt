# ДЗ NEWS PORTAL

python manage.py shell

from news.models import *

# 1) Создать двух пользователей (с помощью метода User.objects.create_user('username')).
user1 = User.objects.create_user("Иванов Иван Иванович")
user2 = User.objects.create_user("Петров Петр Петрович")

# 2) Создать два объекта модели Author, связанные с пользователями.
author1 = Author.objects.create(user = user1)
author2 = Author.objects.create(user = user2)                             

# 3) Добавить 4 категории в модель Category.
cat1 = Category.objects.create(name = 'Спорт')
cat2 = Category.objects.create(name = 'Политика')
cat3 = Category.objects.create(name = 'Образование')
cat4 = Category.objects.create(name = 'Семья')
cat5 = Category.objects.create(name = 'Здоровье')
cat6 = Category.objects.create(name = 'Развлечения')

# 4) Добавить 2 статьи и 1 новость.
news1 = Post.objects.create(author = author1, caption = '«Спартак» еще поборется с «Зенитом» за чемпионство',
text = '''Экс советник бывшего президента «Спартака» Леонида Федуна Франко Камоции поделился мнением о матче «красно-белых» против «Локомотива» в 17-м туре МИР РПЛ.
В субботу «Спартак» на выезде обыграл «Локомотив» со счетом 2:1.''')

article1 = Post.objects.create(author = author1, post_type = article, caption = 'Киркоров, Бузова, Галустян, Долина сверкнули нарядами в Кремлевском дворце',
text = '''Российские звезды собрались в Государственном Кремлевском Дворце на большое шоу. Певицы (и певцы) блистали на красной дорожке в ярких нарядах, а со сцены звучали поздравления и слова благодарности. Среди гостей вечера были Филипп Киркоров, Лариса Долина, Ольга Бузова, Полина Гагарина, Люся Чеботина, Хабиб, Мари Краймбрери, Зара, Стас Костюшкин, REFLEX, Катя Лель, Лера Кудрявцева, блогер DAVA, группа «Блестящие» и другие знаменитости. Лариса Долина вышла в свет вместе со своим протеже Александром Еловских, а Филипп Киркоров охотно позировал журналистам, но общаться с прессой не стал.''')


article2 = Post.objects.create(author = author2, post_type = article, caption = 'Вместо «Яндекса» теперь открывается «Дзен», и куда-то делась почта. Что произошло?',
text = '''Пользователи «Яндекса» не узнали главную страницу сайта: ссылка Yandex.ru привела их на Dzen.ru. Куда делся старый добрый «Яндекс» и какие еще перемены произошли на медиарынке? Отвечаем в карточках.
Что случилось?
«Яндекс» продал два своих медийных актива — новостной агрегатор и платформу для создания и просмотра контента «Дзен» — крупнейшей технологической компании в России VK. Взамен «Яндекс» получил сервис доставки готовой еды и продуктов Delivery Club. Сделку закрыли 12 сентября после согласования с Федеральной антимонопольной службой.''')

# 5) Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
news1.category.add(cat1)
news1.category.add(cat6)
article1.category.add(cat6)
article2.category.add(cat2)

# 6) Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
comment1 = Comment.objects.create(post = news1, user = user2, text = '''Очень круто, поздравляем''')
comment2 = Comment.objects.create(post = article1, user = user1, text = '''Красиво жить не запретишь)''')
comment3 = Comment.objects.create(post = article2, user = user2, text = '''Да всё на месте. чего понапридумывали.''')
comment4 = Comment.objects.create(post = article2, user = user1, text = '''Яндекс все правильно сделал - избавился от токсичной новостной помойки Дзена! :)
Вот многие пишут что типо Яндекс перестал быть конкурентом Google..
Серьезно?
Где вы видели у Google новостную помойку? :)
Яндекс наоборот стал ближе и к Google и к Amazon выбрав специализацию облачных сервисов, торговли и систем ИИ.
Я как ИТ инженер поддерживаю решение Яндекс! :)''')

# 7) Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
news1.like()
news1.like()
article1.dislike()
article2.like()
article2.like()
article2.like()
comment1.like()
comment2.like()
comment2.dislike()
comment4.like()
comment1.like()
comment1.like()
comment1.like()
comment4.like()
comment4.like()
comment4.like()
comment4.like()
comment4.like()

# 8) Обновить рейтинги пользователей.
author1.update_rating()
author2.update_rating()

# 9) Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
Comment.objects.all().order_by('-rating').values('user__username', 'rating')[0]


# 10) Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
Post.objects.filter(post_type = article).order_by('-rating').values('time_create','author__user__username', 'caption', 'rating')[0]


# 11) Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
art = Post.objects.filter(post_type = article).order_by('-rating')[0]
art.comment_set.all().values('time_create','as_user__username','rating','text')


